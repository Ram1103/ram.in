---
 // Any necessary imports can go here
---

<div id="default-carousel" class="relative w-full" data-carousel="slide">
    <!-- Carousel wrapper -->
    <div class="relative h-56 overflow-hidden rounded-lg md:h-96">
        <!-- Item 1 -->
        <div class="ease-in-out" data-carousel-item>
            <img src="https://via.placeholder.com/600" class="absolute block w-full -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2" alt="Slide 1">
        </div>
        <!-- Item 2 -->
        <div class="hidden ease-in-out" data-carousel-item>
            <img src="/images/ram_prof.jpg" class="absolute block w-full -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2" alt="Slide 2">
        </div>
        <!-- Item 3 -->
        <div class="hidden ease-in-out" data-carousel-item>
            <img src="https://via.placeholder.com/600" class="absolute block w-full -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2" alt="Slide 3">
        </div>
        <!-- Add more items if necessary -->
    </div>
    
   <!-- Slider indicators -->
<div class="absolute z-30 flex -translate-x-1/2 bottom-5 left-1/2 space-x-3 rtl:space-x-reverse">
    <button type="button" class="w-3 h-3 rounded-full bg-gray-300" aria-current="true" aria-label="Slide 1" data-carousel-slide-to="0"></button>
    <button type="button" class="w-3 h-3 rounded-full bg-gray-300" aria-current="false" aria-label="Slide 2" data-carousel-slide-to="1"></button>
    <button type="button" class="w-3 h-3 rounded-full bg-gray-300" aria-current="false" aria-label="Slide 3" data-carousel-slide-to="2"></button>
    
</div>

    
    <!-- Slider controls -->
    <button type="button" class="absolute top-0 start-0 z-30 flex items-center justify-center h-full px-4 cursor-pointer group focus:outline-none" data-carousel-prev>
        <span class="inline-flex items-center justify-center w-10 h-10 rounded-full bg-white/30 dark:bg-gray-800/30 group-hover:bg-white/50 dark:group-hover:bg-gray-800/60 group-focus:ring-4 group-focus:ring-white dark:group-focus:ring-gray-800/70 group-focus:outline-none">
            <svg class="w-4 h-4 text-white dark:text-gray-800 rtl:rotate-180" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 1 1 5l4 4"/>
            </svg>
            <span class="sr-only">Previous</span>
        </span>
    </button>
    <button type="button" class="absolute top-0 end-0 z-30 flex items-center justify-center h-full px-4 cursor-pointer group focus:outline-none" data-carousel-next>
        <span class="inline-flex items-center justify-center w-10 h-10 rounded-full bg-white/30 dark:bg-gray-800/30 group-hover:bg-white/50 dark:group-hover:bg-gray-800/60 group-focus:ring-4 group-focus:ring-white dark:group-focus:ring-gray-800/70 group-focus:outline-none">
            <svg class="w-4 h-4 text-white dark:text-gray-800 rtl:rotate-180" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 9 4-4-4-4"/>
            </svg>
            <span class="sr-only">Next</span>
        </span>
    </button>
</div>

<script>
   document.addEventListener('DOMContentLoaded', function() {
       const items = document.querySelectorAll('[data-carousel-item]');
       const prevButton = document.querySelector('[data-carousel-prev]');
       const nextButton = document.querySelector('[data-carousel-next]');
       const indicators = document.querySelectorAll('[data-carousel-slide-to]');
       let currentItemIndex = 0;

       const showItem = (index) => {
           items.forEach((item, i) => {
               item.classList.toggle('hidden', i !== index);
               indicators[i].setAttribute('aria-current', i === index);
           });
       };

       // Show the first item
       showItem(currentItemIndex);

       // Previous button functionality
       prevButton.onclick = () => {
           currentItemIndex = (currentItemIndex - 1 + items.length) % items.length;
           showItem(currentItemIndex);
       };

       // Next button functionality
       nextButton.onclick = () => {
           currentItemIndex = (currentItemIndex + 1) % items.length;
           showItem(currentItemIndex);
       };

       // Indicator functionality
       indicators.forEach((indicator, index) => {
           indicator.onclick = () => {
               currentItemIndex = index;
               showItem(currentItemIndex);
           };
       });
   });
</script>
